<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.geomhwein.go.user.service.UserMapper">

	<insert id="comunityForm">
	insert into COMUNITY(PST_TTL_NM,PST_TTL_CN,INQ_CNT,USERID) VALUES(#{pst_ttl_nm},#{pst_ttl_cn},0,'aaa123')
	</insert>
	
	<select id="getComunityList" resultType="comunityVO">
	select * 
	from COMUNITY
	<if test='searchInput != null'>
		where pst_ttl_nm like concat('%',#{searchInput},'%') OR userId like concat('%',#{searchInput},'%')
	</if>
	<if test="searchFilter == 'new'">
		ORDER BY pst_ttl_no DESC
	</if>
	<if test="searchFilter == 'hit'">
	ORDER BY INQ_CNT DESC
	</if>
	limit #{pageStart},#{amount}
	</select>
	
	<select id="getComunityDetail" resultType="comunityVO">
	select * from COMUNITY WHERE pst_ttl_no = #{pst_ttl_no}
	</select>
	
	<update id="comunityModifyForm">
	update COMUNITY set pst_ttl_nm = #{pst_ttl_nm} , pst_ttl_cn = #{pst_ttl_cn} where pst_ttl_no = #{pst_ttl_no}
	</update>
	
	<delete id="comunityDelete">
	delete from COMUNITY where pst_ttl_no = #{pst_ttl_no}
	</delete>
	
	<update id="updateHit">
		update COMUNITY set INQ_CNT = INQ_CNT + 1 where pst_ttl_no = #{pst_ttl_no}
	</update>
	
	<select id="comunityTotal" resultType="int">
	select count(*) from COMUNITY
	<if test='searchInput != null'>
		where pst_ttl_nm like concat('%',#{searchInput},'%') OR pst_ttl_cn like concat('%',#{searchInput},'%')
	</if>
	</select>
	
	<insert id="registFile">
		
		<selectKey resultType="int" keyProperty="pst_ttl_no" order="BEFORE">
			select max(pst_ttl_no) from COMUNITY where USERID = 'aaa123'
		</selectKey>
		
	insert into COMUNITY_UPLOAD(
		filename,
		filepath,
		uuid,
		pst_ttl_no,
		USERID
	)
	values(
	#{filename},
	#{filepath},
	#{uuid},
	#{pst_ttl_no},
	#{userId}
	)
	</insert>
	
	<select id="getFile" resultType="ComunityUploadVO">
	select * from COMUNITY_UPLOAD WHERE pst_ttl_no = #{pst_ttl_no}
	</select>
	
	<insert id="replyAdd">
	insert into REPLY values(pst_ttl_no = #{pst_ttl_no},reply_cn=#{reply_cn},USERID=#{userId})
	</insert>
	
	<select id="getGroup" resultType="EducationGroupVO">
		SELECT * FROM EDUCATION_GROUP where GROUP_NO=#{groupNo}
	</select>
	
	<select id="getGroupCount" resultType="int">
		SELECT COUNT(*)FROM EDUCATION_GROUP
	</select>
	<insert id="applyGroup">
		insert into group_application(GROUP_NO,USER_ID)
		values(#{groupNo},#{userId})
	</insert>
	
	<insert id="addQuestion">
	insert into MAKEQUESTION(QSTN_CN,USER_ID) values(#{qstnCn},#{userId})
	</insert>
	
	<select id="getQuestionList" resultType="QuestionVO">
	
	select * from MAKEQUESTION WHERE USER_ID = #{userId}
	</select>
	
	<select id="questionDetail" resultType="QuestionVO">
	select * from MAKEQUESTION WHERE QSTN_NO = #{qstnNo}
	</select>
	
	<update id="questionModifyForm">
	update MAKEQUESTION SET QSTN_CN = #{qstnCn}
	</update>
	
	<delete id="deleteQuestion">
	delete FROM MAKEQUESTION WHERE QSTN_NO = #{qstnNo}
	</delete>

	<!-- 결과 매핑 정의 -->
	<resultMap id="EducationGroupResultMap" type="com.geomhwein.go.command.EducationGroupVO">
		<result property="recAge" column="권장연령"/>
		<result property="groupUtztnNope" column="그룹이용인원수"/>

		<association property="userDetailsVO" javaType="com.geomhwein.go.command.UserDetailsVO">
			<result property="userId" column="사용자식별자"/>

				<association property="contentVO" javaType="com.geomhwein.go.command.ContentVO">
					<result property="contsNm" column="콘텐츠명"/>
					<result property="contsExpln" column="콘텐츠설명"/>
					<result property="utiznBgngYmd" column="콘텐츠기간"/>
					<result property="contsGrd" column="콘텐츠등급"/>
					<result property="imgNm" column="이미지명"/>
				</association>
		</association>
	</resultMap>

	<!-- 사용자 정보와 관련된 콘텐츠 정보 조회 쿼리 -->
	<select id="getAllEducationGroup" resultMap="EducationGroupResultMap">
		SELECT
			ud.USER_ID AS 사용자식별자,
			c.CONTS_NM AS 콘텐츠명,
			c.CONTS_EXPLN AS 콘텐츠설명,
			c.CONTS_GRD AS 콘텐츠등급,
			c.IMG_NM AS 이미지명,
			eg.REC_AGE AS 권장연령,
			eg.GROUP_UTZTN_NOPE AS 그룹이용인원수,
			c.UTZTN_BGNG_YMD AS 이용시작일자
		FROM
			EDUCATION_GROUP eg
				JOIN
			USER_DETAILS ud ON eg.USER_ID = ud.USER_ID
				JOIN
			CONTENT c ON eg.CONTS_NM = c.CONTS_NM
		WHERE ud.USER_ID = #{userId};
	</select>


<!--	<select id="getAllEducationGroup" resultType="map">-->
<!--		SELECT-->
<!--			ud.USER_ID AS "사용자식별자",-->
<!--			eg.GROUP_UTZTN_NOPE AS "그룹이용인원수",-->
<!--			eg.REC_AGE AS "권장연령",-->
<!--			c.UTZTN_BGNG_YMD AS "이용시작일자",-->
<!--			c.CONTS_NM AS "콘텐츠명",-->
<!--			c.CONTS_EXPLN AS "콘텐츠설명",-->
<!--			c.CONTS_GRD AS "콘텐츠등급",-->
<!--			c.IMG_NM AS "이미지명"-->
<!--		FROM-->
<!--			USER_DETAILS ud-->
<!--				JOIN-->
<!--			EDUCATION_GROUP eg ON ud.USER_ID = eg.USER_ID-->
<!--				JOIN-->
<!--			CONTENT c ON eg.CONTS_NM = c.CONTS_NM-->
<!--		WHERE-->
<!--			ud.USER_ID = #{userId};-->
<!--	</select>-->

</mapper>